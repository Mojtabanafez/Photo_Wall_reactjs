{"ast":null,"code":"import _posts from '../data/posts';\nimport { combineReducers } from 'redux';\n\nfunction comments(state = [], action) {\n  switch (action.type) {\n    case 'ADD_COMMENT':\n      {\n        return [...state, action.comment];\n      }\n\n    default:\n      return state;\n  }\n\n  return state;\n}\n\nfunction posts(state = _posts, action) {\n  switch (action.type) {\n    case 'REMOVED_POST':\n      {\n        return [...state.slice(0, action.index), ...state.slice(action.index + 1)];\n      }\n\n    case 'ADD_POST':\n      {\n        return [...state, action.post];\n      }\n\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  posts,\n  comments\n});\nconsole.log(\"this is reducer\");\nexport default rootReducer;","map":{"version":3,"sources":["/home/mojtaba/Desktop/PhotoWall/Photo_Wall_reactjs/src/redux/reducer.js"],"names":["_posts","combineReducers","comments","state","action","type","comment","posts","slice","index","post","rootReducer","console","log"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,eAAnB;AACA,SAASC,eAAT,QAAgC,OAAhC;;AAEA,SAASC,QAAT,CAAkBC,KAAK,GAAG,EAA1B,EAA8BC,MAA9B,EAAuC;AAEnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AAAoB;AACZ,eAAO,CAAC,GAAGF,KAAJ,EAAUC,MAAM,CAACE,OAAjB,CAAP;AACP;;AAAC;AAAS,aAAOH,KAAP;AAHf;;AAMA,SAAOA,KAAP;AACH;;AAED,SAASI,KAAT,CAAeJ,KAAK,GAAGH,MAAvB,EAA+BI,MAA/B,EAAuC;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AAAqB;AACjB,eAAO,CAAC,GAAGF,KAAK,CAACK,KAAN,CAAY,CAAZ,EAAeJ,MAAM,CAACK,KAAtB,CAAJ,EAAkC,GAAGN,KAAK,CAACK,KAAN,CAAYJ,MAAM,CAACK,KAAP,GAAe,CAA3B,CAArC,CAAP;AACH;;AACD,SAAK,UAAL;AAAiB;AACb,eAAO,CAAC,GAAGN,KAAJ,EAAWC,MAAM,CAACM,IAAlB,CAAP;AACH;;AACD;AAAS,aAAOP,KAAP;AAPb;AASH;;AAED,MAAMQ,WAAW,GAAGV,eAAe,CAAC;AAAEM,EAAAA,KAAF;AAASL,EAAAA;AAAT,CAAD,CAAnC;AACAU,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,eAAeF,WAAf","sourcesContent":["import _posts from '../data/posts'\nimport { combineReducers } from 'redux'\n\nfunction comments(state = [], action ) {\n\n    switch (action.type) {\n        case 'ADD_COMMENT': {\n                return [...state,action.comment]\n        } default: return state;\n    }\n\n    return state;\n}\n\nfunction posts(state = _posts, action) {\n    switch (action.type) {\n        case 'REMOVED_POST': {\n            return [...state.slice(0, action.index), ...state.slice(action.index + 1)]\n        }\n        case 'ADD_POST': {\n            return [...state, action.post]\n        }\n        default: return state;\n    }\n}\n\nconst rootReducer = combineReducers({ posts, comments })\nconsole.log(\"this is reducer\");\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}