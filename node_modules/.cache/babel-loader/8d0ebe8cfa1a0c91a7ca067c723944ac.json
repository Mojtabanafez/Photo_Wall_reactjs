{"ast":null,"code":"import _objectSpread from \"/home/mojtaba/Desktop/PhotoWall/Photo_Wall_reactjs/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _posts from '../data/posts';\nimport { combineReducers } from 'redux';\n\nfunction comments(state = {}, action) {\n  switch (action.type) {\n    case 'ADD_COMMENT':\n      {\n        if (!state[action.postId]) {\n          return _objectSpread({}, state, {\n            [action.postId]: [action.comment]\n          });\n        } else {\n          return _objectSpread({}, state, {\n            [action.postId]: [...state[action.postId], action.comment]\n          });\n        }\n      }\n      bra;\n\n    case 'LOAD_COMMENTS':\n      {\n        return action.comment;\n      }\n      break;\n\n    default:\n      return state;\n  }\n}\n\nfunction posts(state = _posts, action) {\n  switch (action.type) {\n    case 'REMOVED_POST':\n      {\n        return [...state.slice(0, action.index), ...state.slice(action.index + 1)];\n      }\n\n    case 'ADD_POST':\n      {\n        return [...state, action.post];\n      }\n\n    case 'LOAD_POSTS':\n      {\n        return action.posts;\n      }\n      break;\n\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  posts,\n  comments\n});\nconsole.log(\"this is reducer\");\nexport default rootReducer;","map":{"version":3,"sources":["/home/mojtaba/Desktop/PhotoWall/Photo_Wall_reactjs/src/redux/reducer.js"],"names":["_posts","combineReducers","comments","state","action","type","postId","comment","bra","posts","slice","index","post","rootReducer","console","log"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,eAAnB;AACA,SAASC,eAAT,QAAgC,OAAhC;;AAEA,SAASC,QAAT,CAAkBC,KAAK,GAAG,EAA1B,EAA8BC,MAA9B,EAAsC;AAClC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AAAoB;AAChB,YAAI,CAACF,KAAK,CAACC,MAAM,CAACE,MAAR,CAAV,EAA2B;AACvB,mCAAYH,KAAZ;AAAmB,aAACC,MAAM,CAACE,MAAR,GAAiB,CAACF,MAAM,CAACG,OAAR;AAApC;AACH,SAFD,MAEO;AACH,mCAAYJ,KAAZ;AAAmB,aAACC,MAAM,CAACE,MAAR,GAAiB,CAAC,GAAGH,KAAK,CAACC,MAAM,CAACE,MAAR,CAAT,EAA0BF,MAAM,CAACG,OAAjC;AAApC;AACH;AACJ;AAAAC,MAAAA,GAAG;;AACJ,SAAK,eAAL;AAAsB;AAClB,eAAOJ,MAAM,CAACG,OAAd;AACH;AAAC;;AACF;AAAS,aAAOJ,KAAP;AAXb;AAaH;;AACD,SAASM,KAAT,CAAeN,KAAK,GAAGH,MAAvB,EAA+BI,MAA/B,EAAuC;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AAAqB;AACjB,eAAO,CAAC,GAAGF,KAAK,CAACO,KAAN,CAAY,CAAZ,EAAeN,MAAM,CAACO,KAAtB,CAAJ,EAAkC,GAAGR,KAAK,CAACO,KAAN,CAAYN,MAAM,CAACO,KAAP,GAAe,CAA3B,CAArC,CAAP;AACH;;AACD,SAAK,UAAL;AAAiB;AACb,eAAO,CAAC,GAAGR,KAAJ,EAAWC,MAAM,CAACQ,IAAlB,CAAP;AACH;;AACD,SAAK,YAAL;AAAmB;AACf,eAAOR,MAAM,CAACK,KAAd;AACH;AAAC;;AACF;AAAS,aAAON,KAAP;AAVb;AAYH;;AACD,MAAMU,WAAW,GAAGZ,eAAe,CAAC;AAAEQ,EAAAA,KAAF;AAASP,EAAAA;AAAT,CAAD,CAAnC;AACAY,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,eAAeF,WAAf","sourcesContent":["import _posts from '../data/posts'\nimport { combineReducers } from 'redux'\n\nfunction comments(state = {}, action) {\n    switch (action.type) {\n        case 'ADD_COMMENT': {\n            if (!state[action.postId]) {\n                return { ...state, [action.postId]: [action.comment] }\n            } else {\n                return { ...state, [action.postId]: [...state[action.postId], action.comment] }\n            }\n        }bra ;\n        case 'LOAD_COMMENTS': {\n            return action.comment\n        } break;\n        default: return state;\n    }\n}\nfunction posts(state = _posts, action) {\n    switch (action.type) {\n        case 'REMOVED_POST': {\n            return [...state.slice(0, action.index), ...state.slice(action.index + 1)]\n        }\n        case 'ADD_POST': {\n            return [...state, action.post]\n        }\n        case 'LOAD_POSTS': {\n            return action.posts;\n        } break;\n        default: return state;\n    }\n}\nconst rootReducer = combineReducers({ posts, comments })\nconsole.log(\"this is reducer\");\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}